#!/bin/bash
# Compile Script
# Ripunk16 & hendramanu
# YouTube Ripunk16
# Github : https://github.com/ripunk
# Github : https://github.com/hendramanu

clear

# Needed Variables
AWAL=$(pwd)
a="cd .."
b="cp patch/wlan1.patch .."

# Delete existing patch
# Force delete even don't exist with silent output
rm wlan1.patch &> /dev/null

function check_success() {
if [ -e arch/arm64/boot/Image ] || [ -e output/arch/arm64/boot/Image ]; then
	echo -e $green"Success!"$transparent
	sleep 3
else
	echo -e $red"[!] ERROR!!"
	echo -e ""$red"Fix the error with log information then run ./build to recompile"$transparent
	sleep 3
fi
echo -en $yellow"[-] Press any button to continue"$transparent
read sukses
case $sukses in
*)
	menu;
esac

}

function check_config() {
 $b
 $a
	if [ -e output/.config ] || [ -e .config ]; then
		sleep 0.1 && echo -e ""$yellow"Current config detected! Skipping...""$transparent"
		BARU=NGGAK
	else
		BARU=IYA
		rm -r output > /dev/null 2>&1
		mkdir output
  echo -e ""$blue"Please "$red"Wait ...."
  loading
		make clean &> /dev/null
		make mrproper &> /dev/null
  clear
  banner
	fi
}

# Variable
EX="export CROSS_COMPILE="
EX_H="export KERNELNAME=Ripunk@E99_Hendramanu"
PROC=`grep processor /proc/cpuinfo|wc -l`

if [ "$BARU" == "NGGAK" ]; then
    C_D="make O=output"
	C_O="make O=output -j$PROC && check_success"
	COM="make -j$PROC && check_success"
	CM_O=echo "Old config! Skipping menuconfig"
	CM=echo "Old config! Skipping menuconfig"
else
	CM_O="make O=output menuconfig"
	CM="make menuconfig"
	COM="make -j$PROC && check_success"
	C_O="make O=output -j$PROC && check_success"
	C_D="make O=output"
fi

# Colors
white="\033[1;37m"
grey="\033[0;37m"
purple="\033[0;35m"
red="\033[1;31m"
green="\033[1;32m"
yellow="\033[1;33m"
cyan="\033[0;36m"
cafe="\033[0;33m"
fiuscha="\033[0;35m"
blue="\033[1;34m"
transparent="\e[0m"
#########

# Add repo
function add_repo(){
if grep -Fxq "deb http://ports.ubuntu.com/ubuntu-ports xenial main restricted universe multiverse" /etc/apt/sources.list; then
	echo -e""$red"Repo already added!""$transparent"
else
	echo -e""$yellow" Adding Ubuntu 16.04 Xenial And 18.04 Bionic Repository""$transparent"
sleep 2
echo "deb http://ports.ubuntu.com/ubuntu-ports bionic main restricted universe multiverse" >>  /etc/apt/sources.list
echo "deb http://ports.ubuntu.com/ubuntu-ports bionic-security main restricted universe multiverse" >> /etc/apt/sources.list
echo "deb http://ports.ubuntu.com/ubuntu-ports bionic-updates main restricted universe multiverse" >> /etc/apt/sources.list
echo "deb http://ports.ubuntu.com/ubuntu-ports bionic-backports main restricted universe multiverse" >> /etc/apt/sources.list
echo "deb http://ports.ubuntu.com/ubuntu-ports xenial main restricted universe multiverse" >> /etc/apt/sources.list
echo "deb http://ports.ubuntu.com/ubuntu-ports xenial-security main restricted universe multiverse" >> /etc/apt/sources.list
echo "deb http://ports.ubuntu.com/ubuntu-ports xenial-updates main restricted universe multiverse" >> /etc/apt/sources.list
echo "deb http://ports.ubuntu.com/ubuntu-ports xenial-backports main restricted universe multiverse" >> /etc/apt/sources.list
gpg --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32 > /dev/null 2>&1
sleep 3
gpg -a --export 3B4FE6ACC0B21F32 | sudo apt-key add - > /dev/null 2>&1
sleep 3
fi
}


# Install gcc-4.9
function install_gcc-4.9(){
if ! type gcc-4.9 2>/dev/null; then
	echo "Installing GCC 4.9..."
	add_repo
	apt update &> /dev/null
 	DEBIAN_FRONTEND=noninteractive apt install bc bison build-essential ccache curl flex git gnupg gperf imagemagick liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev -y &> /dev/null
	apt install gcc-4.9 g++-4.9 -y &> /dev/null
	update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 30 > /dev/null 2>&1
	update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 30 > /dev/null 2>&1
 	sleep 0.5
	clear
else
	echo "GCC already Installed... Skipping"
	sleep 0.5
	clear
fi

}

#install gcc-5
function install_gcc-5(){
if ! type gcc-5 2>/dev/null; then
	             echo "Installing GCC..."
	   add_repo
           apt update &> /dev/null
           DEBIAN_FRONTEND=noninteractive apt install bc bison build-essential ccache curl flex git gnupg gperf imagemagick liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev &> /dev/null
           apt install gcc-5 g++-5 &> /dev/null
           update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 > /dev/null 2>&1
           update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 60 > /dev/null 2>&1
                     sleep 0.5
                     clear
	else
                     echo "GCC already Installed..."
		     sleep 0.6
                     clear
	fi
}

function loading() {
    echo -ne ""$red"*********"
    sleep 0.15
    echo -ne ""$red"***************"
    sleep 1
    echo -ne ""$red"***********************"
    sleep 1
    echo -ne ""$red" OK!"
    sleep 1
    echo -ne "\n"
}

#compile
function compile_univ(){
$EX
if [ $BARU == NGGAK ]; then
	echo -e ""$red"Not make "$blue"defconfig due to old "$cyan"config""$transparent"
 read -p "Edit Config y/n? : " config
    if [ $config = "y" ];then
       $EX_H
       $CM_O
       $C_O
    else
	      $C_O
    fi
else
echo -e ""$red"Choose Config ""$transparent"
echo ""
ls arch/arm64/configs
if [ -e arch/arm64/configs/vendor ]; then
	echo "In vendor : "
	ls arch/arm64/configs/vendor
	echo ""
	echo -e " If your "$red"defconfig "$transparent"is in "$red"vendor "$transparent"folder, "$yellow"please add vendor/ in your input"
	echo -e ""$red" Example "$trasparent": "$yellow"vendor/nethunter_defconfig"
fi
echo -e ""$red""
read -p "[Defconfig] : " conf;
	$C_D $conf
	sleep 1
	$CM_O
	sleep 1
	$C_O
fi
}

function compile_samsung(){
$EX
if [ $BARU == NGGAK ]; then
	echo -e ""$red"Not make "$blue"defconfig due to old "$cyan"config!""$transparent"
read -p "Edit Config y/n? : " config
    if [ $config = "y" ];then
       $EX_H
       $CM
       $COM
    else
	      $COM
    fi
else
echo -e ""$red"Choose Config ""$transparent"
echo -e ""$cyan""
ls arch/arm64/configs
echo ""$red""
read -p "[Defconfig] : " conf;
$COM $conf
sleep 1
$CM
sleep 1
$COM
dc=$?
if [ $dc != 0 ]; then
$COM
fi
fi
}

function device() {
clear
echo -e ""$red"Choose your device :""$transparent"
echo -e ""$red["$yellow"1"$red"] "$green"Samsung""$transparent"
""$red["$yellow"2"$red"] "$green"Xiaomi and other""$transparent"
echo ""
echo -n "[Device] : "
read device
case $device in
1)
compile_samsung

esac

case $device in
2)
compile_univ

esac

}

function patching(){
echo -e "$blue"================ "$red""Patching wlan1 "$blue"================""$transparent"
patch -p1 < wlan1.patch
#rm wlan1.patch > /dev/null 2>&1
}

function eror(){
eror=$?
if [ $eror != 0 ]; then
    echo "eror"
    menu
fi
}

function banner() {
sleep 0.1 && echo -e $fiuscha " X --------------- X " $transparent
sleep 0.1 && echo -e $fiuscha "  ______ ___   ___   " $transparent
sleep 0.1 && echo -e $blue    " |  ____/ _ \ / _ \  " $transparent
sleep 0.1 && echo -e $red     " | |__ | (_) | (_) | " $transparent
sleep 0.1 && echo -e $purple  " |  __| \__  |\__  | " $transparent
sleep 0.1 && echo -e $yellow  " | |____  / /   / /  " $transparent
sleep 0.1 && echo -e $green   " |______|/_/   /_/   " $transparent
echo  ""
sleep 0.1 && echo  -e $fiuscha" X --------------- X " $transparent
sleep 0.1 && echo -e $cyan " S C R I P T "
echo ""
echo "| https://github.com/nethunter-indo/compile             |"
echo -e ""$green"| "$yellow"YouTube  : Ripunk16 "$red"(https://youtube.com/Ripunk16)    "$green"|""$transparent"
echo -e ""$green"| "$yellow"Author 1 : ripunk / E99 "$red"(https://github.com/ripunk)   "$green"|""$transparent"
echo -e ""$green"| "$yellow"Author 2 : hendramanu "$red"(https://github.com/hendramanu) "$green"|""$transparent"
echo "" ""
}
#menu
function menu(){
echo -e ""
echo -e ""$red"["$yellow"1"$red"]"$green"Compile"
echo -e ""$red"["$yellow"2"$red"]"$green"Install GCC 4.9 "$red"recommended ""$tranparent"
echo -e ""$red"["$yellow"3"$red"]"$green"Install GCC 5.0 "
echo -e ""$red"["$yellow"4"$red"]"$green"Clang "$red"(NOT AVAILABLE YET)""$transparent"
echo -e ""$red"["$yellow"5"$red"]"$green"Patch"
echo -e ""$red"["$yellow"6"$red"]"$green"Exit""$transparent"
echo -e ""
echo -n "[root@E99 | hendramanu] : "
read pil
case $pil in
1)
device
esac

case $pil in
2)
install_gcc-4.9
menu
esac

case $pil in
3)
install_gcc-5
menu
esac

case $pil in
4)

esac

case $pil in
5)
patching
eror
esac

case $pil in
6)
sleep 0.5
exit

esac

case $pil in
*)
echo "Invalid!"
sleep 1
echo -e ""$red"Run ./build to recompile"
sleep 1
exit


esac
}

banner
check_config
menu
